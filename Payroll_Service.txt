Enter password: *****************
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 17
Server version: 8.0.31 MySQL Community Server - GPL

Copyright (c) 2000, 2022, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//UC1: Ability to create a payroll service database
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

->create database query to create a payroll_service database

mysql> CREATE DATABASE payroll_service;
Query OK, 1 row affected (0.01 sec)

-> see the database created using query show databases

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| payroll_service    |
| performance_schema |
| pets               |
| sakila             |
| sys                |
| world              |
+--------------------+

-> for going to the database which is created by using USE payroll_service

mysql> USE payroll_service;
Database changed

-> go to the database using SELECT DATABASE() query

mysql> SELECT DATABASE();
+-----------------+
| DATABASE()      |
+-----------------+
| payroll_service |
+-----------------+

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//UC2: Ability to create a employee payroll table in the payroll service database to manage employee payrolls
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-> Create Table employee_payroll Query to create employee payroll table with columns id, name, salary and start date as column. Note Id is set to auto increment.

mysql> CREATE TABLE employee_payroll
    -> (
    ->  id                      INT unsigned NOT NULL AUTO_INCREMENT,					# id is auto increment
    ->  name                    VARCHAR(150) NOT NULL,							# name of the employee
    ->  salary                  Double NOT NULL,							# salary of the employee
    ->  start                   DATE NOT NULL,								# Joining date of employee
    ->  PRIMARY KEY             (id)									# id is primary key because we require unique id
    -> );

-> use DESCRIBE emplooyee_payroll query to show the description of the table

mysql> DESCRIBE employee_payroll;
+--------+--------------+------+-----+---------+----------------+
| Field  | Type         | Null | Key | Default | Extra          |
+--------+--------------+------+-----+---------+----------------+
| id     | int unsigned | NO   | PRI | NULL    | auto_increment |
| name   | varchar(150) | NO   |     | NULL    |                |
| salary | double       | NO   |     | NULL    |                |
| start  | date         | NO   |     | NULL    |                |
+--------+--------------+------+-----+---------+----------------+


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//UC3: Ability to create employeepayroll data in the payroll service database as part of CURD Operation
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

->INSERT INTO employee_payroll Query to create employees payroll data into the employee_payroll table

mysql> INSERT INTO employee_payroll ( name, salary, start ) VALUES
    ->       ('Abhishek', 150000.00, '2016-05-15' ),							# 1st employee details
    ->       ('Rahul', 275000.00, '2019-09-04' ),							# 2nd employee details
    ->       ('Abhay', 300000.00, '2021-11-24' ),							# 3rd employee details
    ->       ('Aakash', 375000.00, '2022-03-02' );							# 4th employee details

//UC4: Ability to retrieve all the employee payroll data that is added to payroll service database

-> SELECT * FROM employee_payroll query to retrive all the data from employee_payroll table.

mysql> SELECT * FROM employee_payroll;
+----+----------+--------+------------+
| id | name     | salary | start      |
+----+----------+--------+------------+
|  1 | Abhishek | 150000 | 2016-05-15 |
|  2 | Rahul    | 275000 | 2019-09-04 |
|  3 | Abhay    | 300000 | 2021-11-24 |
|  4 | Aakash   | 375000 | 2022-03-02 |
+----+----------+--------+------------+

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//UC5: Ability to retrieve salary data for a particular employee as well as all employees who have joined in a particular data range from the payroll service database
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> SELECT salary FROM employee_payroll WHERE name = 'Abhishek’ Query to View Abhishek’s salary 
-> WHERE Condition Clause is used to retrieve the row needed from the table

mysql> SELECT salary FROM employee_payroll WHERE name = 'Abhishek';
+--------+
| salary |
+--------+
| 150000 |
+--------+

-> WHERE Condition Clause is used to retrieve the row needed from the table.
-> BETWEEN is used to retive the data based on the joining date of employee.
-> using CAST() function convert string date into the Date.
-> WHERE start BETWEEN CAST('2018-01-01' AS DATE) AND DATE(NOW()) query used to retrive the data from date of joining of Abhishek Employee to till now joining the date of the employee.

mysql> SELECT * FROM employee_payroll
       WHERE start BETWEEN CAST('2016-05-15' AS DATE) AND DATE(NOW());
+----+----------+--------+------------+
| id | name     | salary | start      |
+----+----------+--------+------------+
|  1 | Abhishek | 150000 | 2016-05-15 |
|  2 | Rahul    | 275000 | 2019-09-04 |
|  3 | Abhay    | 300000 | 2021-11-24 |
|  4 | Aakash   | 375000 | 2022-03-02 |
+----+----------+--------+------------+

-> one more Example

mysql> SELECT * FROM employee_payroll
    ->  WHERE start BETWEEN CAST('2019-09-04' AS DATE) AND DATE(NOW());
+----+--------+--------+------------+
| id | name   | salary | start      |
+----+--------+--------+------------+
|  2 | Rahul  | 275000 | 2019-09-04 |
|  3 | Abhay  | 300000 | 2021-11-24 |
|  4 | Aakash | 375000 | 2022-03-02 |
+----+--------+--------+------------+


EXTRA:
-> Adding a Female Employee in the employee_payroll table beacuse I added only male employees in the table

mysql> INSERT INTO employee_payroll ( name, salary, start ) VALUES
    -> ('Shreya', 450000.00, '2022-02-22' );

mysql>  SELECT * FROM employee_payroll;
+----+----------+--------+------------+
| id | name     | salary | start      |
+----+----------+--------+------------+
|  1 | Abhishek | 150000 | 2016-05-15 |
|  2 | Rahul    | 275000 | 2019-09-04 |
|  3 | Abhay    | 300000 | 2021-11-24 |
|  4 | Aakash   | 375000 | 2022-03-02 |
|  5 | Shreya   | 450000 | 2022-02-22 |
+----+----------+--------+------------+

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//UC6: Ability to add Gender to Employee Payroll Table and Update the Rows to reflect the correct Employee Gender
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-> Alter Table Command to add Field gender after the name field

mysql> ALTER TABLE employee_payroll ADD gender CHAR(1) AFTER name;					# Adding gender field

-> describe new updated field

mysql> DESCRIBE employee_payroll;
+--------+--------------+------+-----+---------+----------------+
| Field  | Type         | Null | Key | Default | Extra          |
+--------+--------------+------+-----+---------+----------------+
| id     | int unsigned | NO   | PRI | NULL    | auto_increment |
| name   | varchar(150) | NO   |     | NULL    |                |
| gender | char(1)      | YES  |     | NULL    |                |
| salary | double       | NO   |     | NULL    |                |
| start  | date         | NO   |     | NULL    |                |
+--------+--------------+------+-----+---------+----------------+

-> Update Query to set the gender using where condition with the employee name

mysql> update employee_payroll set gender = 'F' where name = 'Shreya';					# adding genders to the employee with respect to name

mysql> SELECT * FROM employee_payroll;
+----+----------+--------+--------+------------+
| id | name     | gender | salary | start      |
+----+----------+--------+--------+------------+
|  1 | Abhishek | NULL   | 150000 | 2016-05-15 |
|  2 | Rahul    | NULL   | 275000 | 2019-09-04 |
|  3 | Abhay    | NULL   | 300000 | 2021-11-24 |
|  4 | Aakash   | NULL   | 375000 | 2022-03-02 |
|  5 | Shreya   | F      | 450000 | 2022-02-22 |
+----+----------+--------+--------+------------+

-> similarly update all the employees gender using where condition with the employee name

mysql> update employee_payroll set gender = 'M' where name = 'Abhishek' or name = 'Rahul' or name = 'Abhay' or name = 'Aakash';

mysql> SELECT * FROM employee_payroll;
+----+----------+--------+--------+------------+
| id | name     | gender | salary | start      |
+----+----------+--------+--------+------------+
|  1 | Abhishek | M      | 150000 | 2016-05-15 |
|  2 | Rahul    | M      | 275000 | 2019-09-04 |
|  3 | Abhay    | M      | 300000 | 2021-11-24 |
|  4 | Aakash   | M      | 375000 | 2022-03-02 |
|  5 | Shreya   | F      | 450000 | 2022-02-22 |
+----+----------+--------+--------+------------+

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//UC7: Ability to find sum, average, min, max and number of male and female employees 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> Database Function SUM, AVG, MIN, MAX, COUNT to do analysis by Male or Female.

-> retrive the sum of salaries data of male employees from employee_payroll table by using GROUP BY gender query.

mysql> SELECT SUM(salary) FROM employee_payroll where gender = 'M' GROUP BY gender;
+-------------+
| SUM(salary) |
+-------------+
|     1100000 |
+-------------+

-> retrive the Avg of salaries data of male employees from employee_payroll table by using GROUP BY gender query.

mysql> SELECT AVG(salary) FROM employee_payroll where gender = 'M' GROUP BY gender;
+-------------+
| AVG(salary) |
+-------------+
|      275000 |
+-------------+


-> retrive the Avg of salaries data of all employees from employee_payroll table by using GROUP BY gender query.
mysql> SELECT AVG(salary) FROM employee_payroll GROUP BY gender;
+-------------+
| AVG(salary) |
+-------------+
|      275000 |
|      450000 |
+-------------+
# in this above database we dont no the which avg salary for which gender



-> retrive the Avg of salaries data of all employees from employee_payroll table by using GROUP BY gender query.

mysql> SELECT gender, AVG(salary) FROM employee_payroll GROUP BY gender;
+--------+-------------+
| gender | AVG(salary) |
+--------+-------------+
| M      |      275000 |
| F      |      450000 |
+--------+-------------+

# in this above database we know the Which avg Salary for which gender

-> retrive the salary data on the basis of MIN() function.

mysql> SELECT gender, MIN(salary) FROM employee_payroll GROUP BY gender;
+--------+-------------+
| gender | MIN(salary) |
+--------+-------------+
| M      |      150000 |
| F      |      450000 |
+--------+-------------+

# in this above database we getting minimum salary of employee from employee_payroll table

-> retrive the salary data on the basis of MAX() function.

mysql> SELECT gender, MAX(salary) FROM employee_payroll GROUP BY gender;
+--------+-------------+
| gender | MAX(salary) |
+--------+-------------+
| M      |      375000 |
| F      |      450000 |
+--------+-------------+

# in this above database we getting maximum salary of employee from employee_payroll table

-> retrive the salary data on the basis of COUNT() function.

mysql> SELECT gender, COUNT(salary) FROM employee_payroll GROUP BY gender;
+--------+---------------+
| gender | COUNT(salary) |
+--------+---------------+
| M      |             4 |
| F      |             1 |
+--------+---------------+

# in this above database we getting Number of employees on the basis gender




